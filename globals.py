"""
MIT License

Copyright (c) 2022 Giovanni Zito

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
"""

FPS = 60

# current resolution
RESOLUTION = (1024, 768)

# original size of ZX Spectrum screen
ORIGINAL_RESOLUTION = (256, 192)
# 8x8 blocks
ORIGINAL_BLOCKS = (32, 24)

# original size of sprites
ORIGINAL_PLAYER_SIZE = (16, 16)
ORIGINAL_LIFE_SIZE = (8, 8)
ORIGINAL_HAZARD_SIZE = (24, 16)

# scale factors
SCALE_FACTOR_X = RESOLUTION[0] / ORIGINAL_RESOLUTION[0]
SCALE_FACTOR_Y = RESOLUTION[1] / ORIGINAL_RESOLUTION[1]

# player
SCALED_PLAYER_SIZE = (ORIGINAL_PLAYER_SIZE[0] * SCALE_FACTOR_X, ORIGINAL_PLAYER_SIZE[1] * SCALE_FACTOR_Y)
SCALED_PLAYER_WIDTH = SCALED_PLAYER_SIZE[0]
SCALED_PLAYER_HEIGHT = SCALED_PLAYER_SIZE[1]
PLAYER_SPEED = 1.5
SCALED_PLAYER_SPEED = PLAYER_SPEED * SCALE_FACTOR_X

# life
SCALED_LIFE_SIZE = (ORIGINAL_LIFE_SIZE[0] * SCALE_FACTOR_X, ORIGINAL_LIFE_SIZE[1] * SCALE_FACTOR_Y)

# screen
BORDER_WIDTH = 8
L_SCREEN_EDGE = BORDER_WIDTH
R_SCREEN_EDGE = ORIGINAL_RESOLUTION[0] - BORDER_WIDTH
SCALED_BORDER_WIDTH = BORDER_WIDTH * SCALE_FACTOR_X
SCALED_L_SCREEN_EDGE = L_SCREEN_EDGE * SCALE_FACTOR_X
SCALED_R_SCREEN_EDGE = R_SCREEN_EDGE * SCALE_FACTOR_X

# lines
LINE_WIDTH = (R_SCREEN_EDGE + 1) - L_SCREEN_EDGE
LINE_THICKNESS = 2
LINES_DISTANCE = 24
SCALED_LINE_WIDTH = LINE_WIDTH * SCALE_FACTOR_X
SCALED_LINE_THICKNESS = LINE_THICKNESS * SCALE_FACTOR_Y
SCALED_LINES_DISTANCE = LINES_DISTANCE * SCALE_FACTOR_Y

# gaps
GAP_WIDTH = 24
SCALED_GAP_WIDTH = GAP_WIDTH * SCALE_FACTOR_X
GAP_SPEED = 1.5
SCALED_GAP_SPEED = GAP_SPEED * SCALE_FACTOR_X

# hazards
SCALED_HAZARD_SIZE = (ORIGINAL_HAZARD_SIZE[0] * SCALE_FACTOR_X, ORIGINAL_HAZARD_SIZE[1] * SCALE_FACTOR_Y)
HAZARD_SPEED = 1.5
SCALED_HAZARD_SPEED = HAZARD_SPEED * SCALE_FACTOR_X
HAZARD_WIDTH = 24
SCALED_HAZARD_WIDTH = HAZARD_WIDTH * SCALE_FACTOR_X

# colors
COLOR_BASIC_BLACK = (0, 0, 0)
COLOR_BASIC_BLUE = (0, 0, 215)
COLOR_BASIC_RED = (215, 0, 0)
COLOR_BASIC_MAGENTA = (215, 0, 215)
COLOR_BASIC_GREEN = (0, 215, 0)
COLOR_BASIC_CYAN = (0, 215, 215)
COLOR_BASIC_YELLOW = (215, 215, 0)
COLOR_BASIC_WHITE = (215, 215, 215)

COLOR_BRIGHT_BLACK = (0, 0, 0)
COLOR_BRIGHT_BLUE = (0, 0, 255)
COLOR_BRIGHT_RED = (255, 0, 0)
COLOR_BRIGHT_MAGENTA = (255, 0, 255)
COLOR_BRIGHT_GREEN = (0, 255, 0)
COLOR_BRIGHT_CYAN = (0, 255, 255)
COLOR_BRIGHT_YELLOW = (255, 255, 0)
COLOR_BRIGHT_WHITE = (255, 255, 255)

# colors
BACKGROUND_COLOR = COLOR_BASIC_WHITE
FLASH_COLOR_FLOOR_HIT = COLOR_BRIGHT_WHITE
FLASH_COLOR_HAZARD_HIT = COLOR_BASIC_MAGENTA
LINE_COLOR = COLOR_BASIC_RED
SCORE_COLOR = COLOR_BASIC_MAGENTA

# miscellaneous
MAX_HAZARDS = 20
MAX_GAPS = 8  # max 8 gaps - spawns 1 gaps every time the player gets up one line
LIVES = 6

# sprites groups
GROUP_BCKGRND = "bg"
GROUP_HUD = "hud"
GROUP_HAZARDS = "hazards"
GROUP_PLAYER = "player"

# cheats ;)
CHEAT_HAZARD_IMMUNITY = False
CHEAT_JUMP_IMMUNITY = False
CHEAT_FALL_IMMUNITY = False
CHEAT_INFINITE_LIVES = False


# global functions
def b2x(bx):
    return bx * 8 * SCALE_FACTOR_X


def b2y(by):
    return by * 8 * SCALE_FACTOR_Y


def o2x(ox):
    return ox * SCALE_FACTOR_X


def o2y(oy):
    return oy * SCALE_FACTOR_Y
