"""
MIT License

Copyright (c) 2022 Giovanni Zito

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
"""

# original size of ZX Spectrum screen
ZX_SCREEN_WIDTH = 256
ZX_SCREEN_HEIGHT = 192

# 8x8 blocks
ZX_SCREEN_WIDTH_IN_BLOCKS = 32
ZX_SCREEN_HEIGHT_IN_BLOCKS = 24

# screen borders
ZX_TOP_BORDER_HEIGHT = 64
ZX_LEFT_BORDER_WIDTH = 48
ZX_RIGHT_BORDER_WIDTH = 48
ZX_BOTTOM_BORDER_HEIGHT = 56

# original size of sprites
ZX_PLAYER_WIDTH = 16
ZX_PLAYER_HEIGHT = 16
ZX_PLAYER_SIZE = (ZX_PLAYER_WIDTH, ZX_PLAYER_HEIGHT)
ZX_LIFE_WIDTH = 8
ZX_LIFE_HEIGHT = 8
ZX_LIFE_SIZE = (ZX_LIFE_WIDTH, ZX_LIFE_HEIGHT)
ZX_HAZARD_WIDTH = 24
ZX_HAZARD_HEIGHT = 16
ZX_HAZARD_SIZE = (ZX_HAZARD_WIDTH, ZX_HAZARD_HEIGHT)

# FPS
FPS = 60

# current resolution
DISPLAY_WIDTH = 1024
DISPLAY_HEIGHT = 768

# scale factors
SCALE_FACTOR_X = DISPLAY_WIDTH / (ZX_LEFT_BORDER_WIDTH + ZX_SCREEN_WIDTH + ZX_RIGHT_BORDER_WIDTH)
SCALE_FACTOR_Y = DISPLAY_HEIGHT / (ZX_TOP_BORDER_HEIGHT + ZX_SCREEN_HEIGHT + ZX_BOTTOM_BORDER_HEIGHT)

SCALED_SCREEN_OFFSET_X = ZX_LEFT_BORDER_WIDTH * SCALE_FACTOR_X
SCALED_SCREEN_OFFSET_Y = ZX_TOP_BORDER_HEIGHT * SCALE_FACTOR_Y
SCALED_SCREEN_WIDTH = ZX_SCREEN_WIDTH * SCALE_FACTOR_X
SCALED_SCREEN_HEIGHT = ZX_SCREEN_HEIGHT * SCALE_FACTOR_Y
SCALED_RIGHT_BORDER_X = (ZX_LEFT_BORDER_WIDTH + ZX_SCREEN_WIDTH) * SCALE_FACTOR_X
SCALED_BOTTOM_BORDER_Y = (ZX_TOP_BORDER_HEIGHT + ZX_SCREEN_HEIGHT) * SCALE_FACTOR_Y

# player
SCALED_PLAYER_SIZE = (ZX_PLAYER_SIZE[0] * SCALE_FACTOR_X, ZX_PLAYER_SIZE[1] * SCALE_FACTOR_Y)
SCALED_PLAYER_WIDTH = SCALED_PLAYER_SIZE[0]
SCALED_PLAYER_HEIGHT = SCALED_PLAYER_SIZE[1]
PLAYER_SPEED = 1.5
SCALED_PLAYER_SPEED = PLAYER_SPEED * SCALE_FACTOR_X

# life
SCALED_LIFE_SIZE = (ZX_LIFE_SIZE[0] * SCALE_FACTOR_X, ZX_LIFE_SIZE[1] * SCALE_FACTOR_Y)

# floors
FLOOR_WIDTH = ZX_SCREEN_WIDTH
FLOOR_THICKNESS = 2
FLOOR_DISTANCE = 24
SCALED_FLOOR_WIDTH = FLOOR_WIDTH * SCALE_FACTOR_X
SCALED_FLOOR_THICKNESS = FLOOR_THICKNESS * SCALE_FACTOR_Y
SCALED_FLOOR_DISTANCE = FLOOR_DISTANCE * SCALE_FACTOR_Y

# gaps
GAP_WIDTH = 24
SCALED_GAP_WIDTH = GAP_WIDTH * SCALE_FACTOR_X
GAP_SPEED = 1.5
SCALED_GAP_SPEED = GAP_SPEED * SCALE_FACTOR_X

# hazards
SCALED_HAZARD_SIZE = (ZX_HAZARD_SIZE[0] * SCALE_FACTOR_X, ZX_HAZARD_SIZE[1] * SCALE_FACTOR_Y)
SCALED_HAZARD_WIDTH = ZX_HAZARD_SIZE[0] * SCALE_FACTOR_X
SCALED_HAZARD_HEIGHT = ZX_HAZARD_SIZE[1] * SCALE_FACTOR_Y
HAZARD_SPEED = 1.5
SCALED_HAZARD_SPEED = HAZARD_SPEED * SCALE_FACTOR_X

# colors
COLOR_BASIC_BLACK = (0, 0, 0)
COLOR_BASIC_BLUE = (0, 0, 215)
COLOR_BASIC_RED = (215, 0, 0)
COLOR_BASIC_MAGENTA = (215, 0, 215)
COLOR_BASIC_GREEN = (0, 215, 0)
COLOR_BASIC_CYAN = (0, 215, 215)
COLOR_BASIC_YELLOW = (215, 215, 0)
COLOR_BASIC_WHITE = (215, 215, 215)

COLOR_BRIGHT_BLACK = (0, 0, 0)
COLOR_BRIGHT_BLUE = (0, 0, 255)
COLOR_BRIGHT_RED = (255, 0, 0)
COLOR_BRIGHT_MAGENTA = (255, 0, 255)
COLOR_BRIGHT_GREEN = (0, 255, 0)
COLOR_BRIGHT_CYAN = (0, 255, 255)
COLOR_BRIGHT_YELLOW = (255, 255, 0)
COLOR_BRIGHT_WHITE = (255, 255, 255)

# colors
BACKGROUND_COLOR = COLOR_BASIC_WHITE
FLASH_COLOR_FLOOR_HIT = COLOR_BRIGHT_WHITE
FLASH_COLOR_HAZARD_HIT = COLOR_BASIC_MAGENTA
FLOOR_COLOR = COLOR_BASIC_RED
SCORE_COLOR = COLOR_BASIC_MAGENTA

# miscellaneous
MAX_HAZARDS = 20
MAX_GAPS = 8  # max 8 gaps - spawns 1 gaps every time the player gets up one floor
LIVES = 6

# sprites groups
GROUP_BCKGRND = "bg"
GROUP_HUD = "hud"
GROUP_HAZARDS = "hazards"
GROUP_PLAYER = "player"

# cheats ;)
CHEAT_HAZARD_IMMUNITY = False
CHEAT_JUMP_IMMUNITY = False
CHEAT_FALL_IMMUNITY = False
CHEAT_INFINITE_LIVES = False

SKIP_LOADER = False


# global functions
def zxbx2x(bx):
    return (ZX_LEFT_BORDER_WIDTH + (bx * 8)) * SCALE_FACTOR_X


def zxby2y(by):
    return (ZX_TOP_BORDER_HEIGHT + by * 8) * SCALE_FACTOR_Y


def zxbw2w(bw):
    return (bw * 8) * SCALE_FACTOR_X


def zxbh2h(bh):
    return (bh * 8) * SCALE_FACTOR_Y


def zxx2x(zx_x):
    return (ZX_LEFT_BORDER_WIDTH + zx_x) * SCALE_FACTOR_X


def zxy2y(zx_y):
    return (ZX_TOP_BORDER_HEIGHT + zx_y) * SCALE_FACTOR_Y


def zxw2w(zx_w):
    return round(zx_w * SCALE_FACTOR_X)


def zxh2h(zx_h):
    return round(zx_h * SCALE_FACTOR_Y)
